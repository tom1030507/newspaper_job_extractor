services:
  newspaper-extractor:    
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: newspaper-job-extractor-prod
    ports:
      - "8080:8080"
    volumes:
      # 持久化存儲（只讀掛載環境變數）
      - ./data/uploads:/app/uploads
      - ./data/results:/app/results
      - ./.env:/app/.env:ro
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - GEMINI_API_KEY=${GEMINI_API_KEY}    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8080/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    # 生產環境安全配置
    security_opt:
      - no-new-privileges:true
      - seccomp:unconfined
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    read_only: false
    tmpfs:
      - /tmp:noexec,nosuid,size=100m
    # 資源限制
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    # 使用非特權用戶
    user: "1000:1000"

  # 可選：Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: newspaper-nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - newspaper-extractor
    networks:
      - app-network
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  app-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  uploads_data:
    driver: local
  results_data:
    driver: local 